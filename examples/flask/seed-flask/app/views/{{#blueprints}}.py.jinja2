""" {{ blueprint.name }} module. """
from datetime import datetime

from flask import Blueprint, render_template, current_app, redirect, request, abort, jsonify, url_for
from flask_login import current_user

from pyseed import populate_model, populate_search
from .common import get_id
from app.tools import auth_permission

{{ blueprint.name_snake }} = Blueprint('{{ blueprint.name_snake }}', __name__)


{% for view in blueprint.views %}
@{{ blueprint.name_snake }}.route('/{{ view.name_snake }}')
{% if blueprint.name != 'public' %}@auth_permission
{% endif %}
def {{ view.name_snake }}():
    """ Get. """
    {% if view.seeds %}
    {% set model = view.seeds[0].model %}
    {% set action = view.seeds[0].action %}
    {% if action == 'read' %}
    id_ = get_id()
    {{ model.name_snake }} = {{ model.name }}.find_one(id_)
    if not {{ model.name_snake }}:
        abort(404)
    #
    return render_template('{{ blueprint.name_snake }}/{{ view.name_snake }}.html', {{ model.name_snake }}={{ model.name_snake }})
    {% elif action == 'form' %}
    id_ = get_id()
    if id_:
        {{ model.name_snake }} = {{ model.name }}.find_one(id_)
        if not {{ model.name_snake }}:
            abort(404)
    else:
        {{ model.name_snake }} = {{ model.name }}()
    #
    return render_template('{{ blueprint.name_snake }}/{{ view.name_snake }}.html', {{ model.name_snake }}={{ model.name_snake }})
    {% elif action == 'query' %}
    search, condition, page, sort = populate_search(request.args, {{ model.name }})
    {{ model.name_snake_plural }}, pagination = {{ model.name }}.search(condition, page, sort=sort)
    return render_template('{{ blueprint.name_snake }}/{{ view.name_snake }}.html',
                           search=search, pagination=pagination,
                           {{ model.name_snake_plural }}={{ model.name_snake_plural }})
    {% else %}
    # TODO: unsupport action {{ action }}
    {% endif %}
    {% else %}
    return render_template('{{ blueprint.name_snake }}/{{ view.name_snake }}.html')
    {% endif %}


{% for seed in view.seeds %}
{% if seed.action == 'form' %}
@{{ blueprint.name_snake }}.route('/{{ view.name_snake }}/{{ seed.name }}', methods=('POST',))
{% if blueprint.name != 'public' %}@auth_permission
{% endif %}
def {{ view.name_snake }}_{{ seed.name }}():
    """ Post. """
    {% set model = seed.model %}
    {{ model.name_snake }} = populate_model(request.form, {{ model.name }})
    id_ = get_id()
    if not id_:  # Create
        {{ model.name_snake }}.save()
        id_ = {{ model.name_snake }}._id
        current_app.logger.info(f'Successfully create {{ model.name }}: {{ '{' }}id_{{ '}' }}')
    else:  # Update
        existing = {{ model.name }}.find_one(id_)
        if not existing:
            abort(404)
        # TODO: Update fields in layout
        existing.updateTime = datetime.now()
        existing.save()
        current_app.logger.info(f'Successfully update {{ model.name }} {{ '{' }}id_{{ '}' }}')
    #
    return jsonify(error=0, message=f'Save {{ model.name }} successfully.', id=id_)
{% endif %}
{% endfor %}
{% endfor %}